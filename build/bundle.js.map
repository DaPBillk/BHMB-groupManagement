{"version":3,"file":"bundle.js","sources":["../src/Permissions/Permissions.ts","../src/Groups/Group.ts","../src/Groups/GroupManager.ts","../src/Permissions/Permission.ts","../src/Permissions/PermissionManager.ts","../src/Users/User.ts","../src/Users/UserManager.ts","../src/UI/index.ts","../src/GroupManagement.ts","../src/index.ts"],"sourcesContent":["import { PermissionResolvable, Permission } from \"./Permission\";\r\nimport { Group } from \"../Groups/Group\";\r\nimport { User } from \"../Users/User\";\r\n\r\nexport interface PermissionsSaveData {\r\n  allowed: string[],\r\n  disabled: string[]\r\n}\r\n\r\nexport class Permissions {\r\n\r\n  allowed: Set<string>;\r\n\r\n  disabled: Set<string>;\r\n\r\n  parent: Group|User;\r\n  \r\n  constructor (parent : Group|User, permissions? : PermissionsSaveData) {\r\n    const data = permissions || {\r\n      allowed: [],\r\n      disabled: []\r\n    };\r\n\r\n    this.parent = parent;\r\n    this.allowed = new Set(data.allowed);\r\n    this.disabled = new Set(data.disabled);\r\n  }\r\n\r\n  has (permissionResolvable : PermissionResolvable) {\r\n    const permission = this.resolvePermission(permissionResolvable);\r\n    if (!permission) return false;\r\n    return this.allowed.has(permission.id);\r\n  }\r\n\r\n  add (permissionResolvable : PermissionResolvable, sudo : boolean = false, disabled : boolean = false) : boolean {\r\n    const permission = this.resolvePermission(permissionResolvable);\r\n    if (!permission || (this.allowed.has(permission.id) && !disabled && !this.disabled.has(permission.id)) || (this.disabled.has(permission.id) && !sudo)) return false;\r\n    this.allowed.add(permission.id);\r\n    if (disabled && !this.disabled.has(permission.id)) {\r\n      this.disabled.add(permission.id);\r\n    }\r\n    this.save();\r\n    return true;\r\n  }\r\n\r\n  delete (permissionResolvable : PermissionResolvable, sudo : boolean = false, disabled : boolean = false) : boolean {\r\n    const permission = this.resolvePermission(permissionResolvable);\r\n    if (!permission || (!sudo && this.disabled.has(permission.id))) return false;\r\n    const deleted = this.allowed.delete(permission.id);\r\n    const deletedDisabled = disabled ? this.disabled.delete(permission.id) : false;\r\n    this.save();\r\n    return deleted || deletedDisabled;\r\n  }\r\n\r\n  save () {\r\n    return this.parent.save();\r\n  }\r\n\r\n  private resolvePermission (permissionResolvable : PermissionResolvable) : Permission | undefined {\r\n    return this.parent.manager.management.permissions.get(permissionResolvable);\r\n  }\r\n\r\n  get data () : PermissionsSaveData {\r\n    return {\r\n      allowed: Array.from(this.allowed),\r\n      disabled: Array.from(this.disabled)\r\n    };\r\n  }\r\n}","import { Player } from \"@bhmb/bot\";\r\nimport { GroupManager } from \"./GroupManager\";\r\nimport { Permissions, PermissionsSaveData } from \"../Permissions/Permissions\";\r\n\r\nexport interface GroupData {\r\n  name: string;\r\n  permissions?: PermissionsSaveData;\r\n  players?: (Player|string)[];\r\n  managed?: boolean;\r\n};\r\n\r\nexport interface GroupConstructorData extends GroupData {\r\n  id: number;\r\n};\r\n\r\nexport interface GroupSaveData {\r\n  id: number;\r\n  name: string;\r\n  permissions: PermissionsSaveData\r\n  players: string[],\r\n  managed: boolean\r\n};\r\n\r\nexport type GroupResolvable = Group|string|number;\r\n\r\nexport class Group {\r\n\r\n  id: number;\r\n\r\n  name: string;\r\n\r\n  permissions: Permissions;\r\n\r\n  players: Player[];\r\n\r\n  managed: boolean;\r\n\r\n  manager: GroupManager;\r\n\r\n  tab?: HTMLDivElement;\r\n\r\n  constructor (groupData : GroupConstructorData, manager : GroupManager) {\r\n    this.name = groupData.name;\r\n    this.id = groupData.id;\r\n    this.permissions = new Permissions(this, groupData.permissions);\r\n    this.players = (groupData.players || []).map(playerOrName => typeof playerOrName === \"string\" ? this.manager.management.extension.world.getPlayer(playerOrName) : playerOrName);\r\n    this.managed = groupData.managed || false;\r\n    this.manager = manager;\r\n\r\n    this.tab = manager.management.ui.addGroup(this);\r\n\r\n  }\r\n\r\n  /**\r\n   * Rename this group, will return if the operation was successful.\r\n   * @param newName New name\r\n   */\r\n  rename (newName : string) : boolean {\r\n    return this.manager.rename(this, newName);\r\n  }\r\n\r\n  /**\r\n   * Delete this group, will return if the operation was successful.\r\n   */\r\n  delete () : boolean {\r\n    return this.manager.delete(this);\r\n  }\r\n\r\n  save () {\r\n    return this.manager.save();\r\n  }\r\n\r\n  /**\r\n   * Get data about the group that can be saved in storage.\r\n   */\r\n  get data () : GroupSaveData {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      permissions: this.permissions.data,\r\n      players: this.players.map(player => player.name),\r\n      managed: this.managed\r\n    };\r\n  }\r\n}","import { Group, GroupData, GroupResolvable, GroupSaveData } from \"./Group\";\r\nimport { GroupManagement } from \"../GroupManagement\";\r\n\r\nconst SAVE_KEY = \"groups\";\r\n\r\nexport class GroupManager {\r\n\r\n  management: GroupManagement;\r\n\r\n  private _groups: Map<number, Group>;\r\n\r\n  constructor (management : GroupManagement) {\r\n    this.management = management;\r\n\r\n    // console.log(this.management.extension.storage.get(SAVE_KEY, []).map((data) => {\r\n    //   return [data];\r\n    // }));\r\n    \r\n    this._groups = new Map(this.management.extension.storage.get(SAVE_KEY, []).map((groupData : GroupSaveData) => [groupData.id, new Group(groupData, this)] as [number, Group]));\r\n  }\r\n\r\n  /**\r\n   * Adds a group.\r\n   * @param groupData Data about the group to be added. \r\n   */\r\n  add (groupData : GroupData) : Group|undefined {\r\n    if (!this.get(groupData.name)) {\r\n      const id = this.nextID;\r\n      const group = new Group({id, ...groupData}, this);\r\n      this._groups.set(id, group);\r\n      this.save();\r\n      return group;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a group, will return if the operation was successful.\r\n   * @param groupResolvable Some identifier that can resolve to the group being deleted.\r\n   */\r\n  delete (groupResolvable : GroupResolvable) : boolean {\r\n    const group = this.resolveGroup(groupResolvable);\r\n    if (!group) return false;\r\n    this._groups.delete(group.id);\r\n    this.save();\r\n    this.management.ui.deleteGroup(group);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a group.\r\n   * @param groupNameOrID Either the group's name or id.\r\n   */\r\n  get (groupNameOrID : string|number) : Group|undefined {\r\n    if (typeof groupNameOrID === \"string\") {\r\n      for (const [, group] of this._groups) {\r\n        if (group.name === groupNameOrID) {\r\n          return group;\r\n        }\r\n      }\r\n    } else {\r\n      return this._groups.get(groupNameOrID);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rename a group to another name. Will return if the operation was successful.\r\n   * @param groupResolvable Some identifier that can resolve to become the group to be renamed.\r\n   * @param newName New name of the group.\r\n   */\r\n  rename (groupResolvable : GroupResolvable, newName : string) : boolean {\r\n    const group = this.resolveGroup(groupResolvable);\r\n    if (group && !this.get(newName) && !group.managed) {\r\n      group.name = newName;\r\n      this.save();\r\n      this.management.ui.refreshGroup(group);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Resolve a group.\r\n   * @param groupResolvable The to be resolved.\r\n   */\r\n  private resolveGroup (groupResolvable : GroupResolvable) : Group|undefined {\r\n    let group;\r\n\r\n    if (typeof groupResolvable === \"string\") {\r\n      group = this.get(groupResolvable);\r\n    } else if (typeof groupResolvable === \"number\") {\r\n      group = this._groups.get(groupResolvable);\r\n    } else {\r\n      group = groupResolvable;\r\n    }\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Save the group data to storage.\r\n   */\r\n  save () {\r\n    let saveData : GroupSaveData[] = [];\r\n    for (const [, group] of this._groups) {\r\n      saveData.push(group.data);\r\n    }\r\n    this.management.extension.storage.set(SAVE_KEY, saveData);\r\n  }\r\n\r\n  /**\r\n   * Get the next group ID.\r\n   */\r\n  get nextID () {\r\n    let latestID = 0;\r\n    for (const [id] of this._groups) {\r\n      if (id > latestID) {\r\n        latestID = id;\r\n      }\r\n    }\r\n    return latestID + 1;\r\n  }\r\n}","import { PermissionManager } from \"./PermissionManager\";\r\nimport { Player } from \"@bhmb/bot\";\r\n\r\nexport type PermissionResolvable = string|Permission;\r\n\r\nexport interface PermissionIgnoring {\r\n  mod?: boolean,\r\n  admin?: boolean,\r\n  staff?: boolean\r\n}\r\n\r\nexport interface PermissionData {\r\n  extension: string;\r\n  id: string;\r\n  name: string;\r\n  category: string;\r\n  command: string;\r\n  callback: (player: Player, args: string) => void,\r\n  ignore?: PermissionIgnoring\r\n};\r\n\r\ninterface InternalPermissionData {\r\n  id: string;\r\n  category: string;\r\n  name: string;\r\n  command: string;\r\n  callback: (player : Player, args : string) => void\r\n  ignore?: PermissionIgnoring;\r\n};\r\n\r\nexport class Permission {\r\n\r\n  extension: string;\r\n\r\n  id: string;\r\n\r\n  name: string;\r\n\r\n  category: string;\r\n  \r\n  callback : (player : Player, args : string) => void;\r\n\r\n  command: string;\r\n\r\n  manager: PermissionManager;\r\n\r\n  ignore?: PermissionIgnoring;\r\n\r\n  constructor (manager: PermissionManager, extension : string, data: InternalPermissionData) {\r\n    const {id, name, category, ignore, callback, command} = data;\r\n    this.extension = extension;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.category = category;\r\n    this.ignore = ignore;\r\n    this.callback = callback;\r\n    this.command = command;\r\n    this.manager = manager;\r\n    manager.management.extension.world.onMessage.sub(this.handleMessage);\r\n\r\n  }\r\n\r\n  handleMessage ({player, message} : {player: Player, message: string}) {\r\n    const [command, ...argsRaw] = message.split(\" \");\r\n    const args = argsRaw.join(\" \");\r\n    const user = this.manager.management.users.get(player);\r\n    if (this.command.toLocaleUpperCase() === command.toLocaleUpperCase().slice(1)) {\r\n      if (user.permissions.has(this.id)) {\r\n        if (this.ignore) {\r\n          if (!(this.ignore.staff && player.isStaff) && !(this.ignore.admin && player.isAdmin) && !(this.ignore.mod && player.isMod)) {\r\n            this.callback(player, args);\r\n          }\r\n        } else {\r\n          this.callback(player, args);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete this permission.\r\n   */\r\n  delete () : boolean {\r\n    return this.manager.delete(this);\r\n  }\r\n};","import { GroupManagement } from \"../GroupManagement\";\r\nimport { Permission, PermissionData, PermissionResolvable } from \"./Permission\";\r\n\r\nexport class PermissionManager {\r\n\r\n  management: GroupManagement;\r\n\r\n  private _permissions: Map<string, Permission>;\r\n\r\n  constructor (management : GroupManagement) {\r\n    this.management = management;\r\n    this._permissions = new Map();\r\n  }\r\n\r\n  /**\r\n   * Add a permission, will return if the operation was successful.\r\n   */\r\n  add (permissionData : PermissionData) : boolean {\r\n    if (!this.get(permissionData.id)) {\r\n      const permission = new Permission(this, permissionData.extension, {\r\n        id: permissionData.id,\r\n        name: permissionData.name,\r\n        category: permissionData.category,\r\n        ignore: permissionData.ignore,\r\n        command: permissionData.command,\r\n        callback: permissionData.callback\r\n      });\r\n      this._permissions.set(permission.id, permission);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Delete a permission, will return in the operation was successful.\r\n   */\r\n  delete (permissionResolvable : PermissionResolvable) : boolean {\r\n    const id = this.resolvePermissionID(permissionResolvable);\r\n    const permission = this._permissions.get(id) as Permission;\r\n    const deleted = this._permissions.delete(id);\r\n    if (deleted) {\r\n      this.management.extension.world.onMessage.unsub(permission.handleMessage);\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * Get all permissions that belong to an extension.\r\n   * @param extension Extension\r\n   */\r\n  getExtensionPermissions (extension : string) : Permission[] {\r\n    const extensionPermissions = [];\r\n    const e = extension.toLocaleLowerCase();\r\n    for (const [, permission] of this._permissions) {\r\n      if (permission.extension.toLocaleLowerCase() === e) {\r\n        extensionPermissions.push(permission);\r\n      }\r\n    }\r\n    return extensionPermissions;\r\n  }\r\n\r\n  /**\r\n   * Get a permission.\r\n   */\r\n  get (permissionResolvable : PermissionResolvable) : Permission|undefined {\r\n    const id = this.resolvePermissionID(permissionResolvable);\r\n    return this._permissions.get(id);\r\n  }\r\n\r\n  private resolvePermissionID (permissionResolvable : PermissionResolvable) : string {\r\n    return typeof permissionResolvable === \"string\" ? permissionResolvable : permissionResolvable.id;\r\n  }\r\n};","import { Player } from \"@bhmb/bot\";\r\nimport { UserManager } from \"./UserManager\";\r\nimport { Permissions, PermissionsSaveData } from \"../Permissions/Permissions\";\r\n\r\nexport type PlayerResolvable = User|Player|string;\r\n\r\nexport interface UserData {\r\n  player: Player|string;\r\n  permissions?: PermissionsSaveData;\r\n}\r\n\r\nexport interface UserSaveData {\r\n  player: string;\r\n  permissions: PermissionsSaveData;\r\n}\r\n\r\nexport class User {\r\n\r\n  manager: UserManager;\r\n\r\n  player: Player;\r\n\r\n  permissions: Permissions;\r\n\r\n  constructor (userData : UserData, manager : UserManager) {\r\n    this.manager = manager;\r\n    if (typeof userData.player === \"string\") {\r\n      this.player = this.manager.management.extension.world.getPlayer(userData.player);\r\n    } else {\r\n      this.player = userData.player;\r\n    }\r\n    this.permissions = new Permissions(this, userData.permissions);\r\n  }\r\n\r\n  /**\r\n   * Delete this user's permissions.\r\n   */\r\n  delete () : boolean {\r\n    return this.manager.delete(this);\r\n  }\r\n\r\n  /**\r\n   * Save\r\n   */\r\n  save () {\r\n    return this.manager.save();\r\n  }\r\n\r\n  /**\r\n   * Get the name of the user.\r\n   */\r\n  get name () {\r\n    return this.player.name;\r\n  }\r\n\r\n  /**\r\n   * Get a JSON object that can be saved to storage\r\n   */\r\n  get data () : UserSaveData {\r\n    return {\r\n      player: this.name,\r\n      permissions: this.permissions.data\r\n    };\r\n  }\r\n};","import { GroupManagement } from \"../GroupManagement\";\r\nimport { PlayerResolvable, User, UserSaveData } from \"./User\";\r\n\r\nconst SAVE_KEY = \"users\";\r\n\r\nexport class UserManager {\r\n  management: GroupManagement;\r\n\r\n  private _users: Map<string, User>;\r\n\r\n  constructor (management : GroupManagement) {\r\n    this.management = management;\r\n    this._users = new Map(this.management.extension.storage.get(SAVE_KEY, []).map((data : UserSaveData) => [data.player, new User(data, this)] as [string, User]));\r\n  }\r\n\r\n  get (playerResolvable : PlayerResolvable) {\r\n    const player = this.resolvePlayer(playerResolvable);\r\n    let user = this._users.get(player.name);\r\n    if (!user) {\r\n      //Create user.\r\n      user = new User({\r\n        player\r\n      }, this);\r\n      this._users.set(player.name, user);\r\n    }\r\n    return user;\r\n  }\r\n\r\n  delete (playerResolvable : PlayerResolvable) : boolean {\r\n    const user = this.resolvePlayer(playerResolvable);\r\n    if (!user) return false;\r\n    const deleted = this._users.delete(user.name);\r\n    //TODO: Remove from UI.\r\n    this.save();\r\n    return deleted;\r\n  }\r\n\r\n  save () {\r\n    let saveData : UserSaveData[] = [];\r\n    for (const [, user] of this._users) {\r\n      saveData.push(user.data);\r\n    }\r\n    this.management.extension.storage.set(SAVE_KEY, saveData);\r\n  }\r\n\r\n  private resolvePlayer (playerResolvable : PlayerResolvable) {\r\n    return this.management.extension.world.getPlayer(typeof playerResolvable === \"string\" ? playerResolvable : playerResolvable.name);\r\n  }\r\n\r\n}","import { UIExtensionExports } from \"@bhmb/ui\";\r\nimport { GroupManagement } from \"../GroupManagement\";\r\nimport { Group } from \"../Groups/Group\";\r\nimport { MessageBot } from \"@bhmb/bot\";\r\nimport { Permission } from \"../Permissions/Permission\";\r\nimport groupTabHTML from \"./Groups/Tab.html\";\r\nimport permissionHTML from \"./Groups/Permission.html\";\r\n\r\nclass UI {\r\n\r\n  private _ui : UIExtensionExports;\r\n\r\n  management : GroupManagement;\r\n\r\n  namespace : string;\r\n\r\n  constructor (management : GroupManagement) {\r\n    this._ui = management.extension.bot.getExports(\"ui\") as UIExtensionExports;\r\n    this.management = management;\r\n    this.namespace = \"dapersonmgn/groupManagement/tab\";\r\n    if (this._ui) {\r\n      this._ui.addTabGroup(\"Group Management\", this.namespace);\r\n    }\r\n  }\r\n\r\n  uninstall () {\r\n    if (this._ui) {\r\n      this._ui.removeTabGroup(this.namespace);\r\n    }\r\n  }\r\n\r\n  addGroup (group : Group) : HTMLDivElement | undefined {\r\n    let tab;\r\n    if (this._ui) {\r\n      tab = this._ui.addTab(group.name, this.namespace);\r\n      tab.innerHTML = groupTabHTML.replace(\"{TITLE}\", group.name);\r\n\r\n      const permissions = MessageBot.extensions.map(extension => group.manager.management.permissions.getExtensionPermissions(extension)).reduce((pSetA, pSetB) => pSetA.concat(pSetB));\r\n      \r\n      const categories : {\r\n        [category : string] : {\r\n          [subcategory : string] : Permission[]\r\n        }\r\n      } = {};\r\n      for (const permission of permissions) {\r\n        const [parentCategory, subCategory] = permission.category.split(\"/\");\r\n        if (!categories[parentCategory]) {\r\n          categories[parentCategory] = {};\r\n        }\r\n        if (!categories[parentCategory][subCategory]) {\r\n          categories[parentCategory][subCategory] = [];\r\n        }\r\n        categories[parentCategory][subCategory].push(permission);\r\n      }\r\n\r\n      let categoryHTML = \"\";\r\n\r\n      for (const parentCategory in categories) {\r\n        categoryHTML += `<p class=\"menu-label is-unselectable\" data-category=\"${parentCategory}\">${parentCategory}</p><ul class=\"menu-list\" data-category=\"${parentCategory}\">`;\r\n        for (const subCategory in categories[parentCategory]) {\r\n          categoryHTML += `<li><a href=\"#\" class=\"is-unselectable\" data-subcategory=\"${subCategory}\">${subCategory}</a></li>`;\r\n          const columns : string[][] = [[], [], []];\r\n          let colNum = 0;\r\n          for (const permission of permissions) {\r\n            if (columns.length === colNum) {\r\n              colNum = 0;\r\n            }\r\n            columns[colNum].push(\r\n              permissionHTML\r\n                .replace(\"{ID}\", permission.id)\r\n                .replace(\"{PERMISSION}\", permission.name)\r\n                .replace(\"{ALLOWED}\", group.permissions.has(permission) ? \"checked \" : \"\")\r\n                .replace(\"{DISABLED}\", group.permissions.disabled.has(permission.id) ? \"disabled\" : \"\")\r\n            );\r\n            colNum++;\r\n          }\r\n          let subCategoryTab = `<div data-subcategory=\"${subCategory}\" class=\"is-invisible\"><div class=\"columns\"><div class=\"column\">${columns[0].join(\"\")}</div><div class=\"column\">${columns[1].join(\"\")}</div><div class=\"column\">${columns[2].join(\"\")}</div></div></div>`;\r\n          (tab.querySelectorAll(\".box\")[1] as HTMLElement).innerHTML += subCategoryTab;\r\n        }\r\n        categoryHTML += `</ul>`;\r\n      }\r\n      (tab.querySelector(\".menu\") as HTMLElement).innerHTML = categoryHTML;\r\n\r\n\r\n\r\n    }\r\n\r\n    // TODO: Select this tab.\r\n    return tab;\r\n  }\r\n\r\n  deleteGroup (group : Group) {\r\n    if (group.tab) {\r\n      this._ui.removeTab(group.tab);\r\n      // TODO: Select first tab.\r\n    }\r\n  }\r\n\r\n  refreshGroup (group : Group) {\r\n    if (group.tab) {\r\n      this.deleteGroup(group);\r\n      group.tab = this.addGroup(group);\r\n      // TODO: Target new tab..\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  UI\r\n};","import { MessageBotExtension } from \"@bhmb/bot\";\r\nimport { GroupManager } from \"./Groups/GroupManager\";\r\nimport { PermissionManager } from \"./Permissions/PermissionManager\";\r\nimport { UserManager } from \"./Users/UserManager\";\r\nimport { UI } from \"./UI\";\r\n\r\nexport class GroupManagement {\r\n\r\n  groups: GroupManager;\r\n\r\n  users: UserManager;\r\n\r\n  permissions: PermissionManager;\r\n\r\n  extension: MessageBotExtension;\r\n\r\n  ui: UI;\r\n\r\n  constructor (ex : MessageBotExtension) {\r\n    this.extension = ex;\r\n    this.groups = new GroupManager(this);\r\n    this.permissions = new PermissionManager(this);\r\n    this.users = new UserManager(this);\r\n    this.ui = new UI(this);\r\n  }\r\n\r\n  uninstall () {\r\n    this.ui.uninstall();\r\n  }\r\n\r\n  /**\r\n   * Save the groups and users.\r\n   */\r\n  save () {\r\n    this.groups.save();\r\n    this.users.save();\r\n  }\r\n\r\n\r\n}","import { MessageBot, Player } from \"@bhmb/bot\";\nimport { GroupManagement } from \"./GroupManagement\";\n\ninterface ExtensionPermission {\n  callback: (player: Player, args: string) => void;\n  id: string;\n  command: string;\n  display: {\n    category: string;\n    name: string;\n  };\n  ignore?: {\n    admin?: boolean,\n    mod?: boolean,\n    staff?: boolean\n  }\n};\n\nMessageBot.registerExtension(\"dapersonmgn/groupManagement\", ex => {\n\n  const GM = new GroupManagement(ex);\n\n  ex.exports.manager = GM;\n\n  /**\n   * Listener for when an extension is registered.\n   * @param extension Name of the extension.\n   */\n  const handleExtensionRegister = (extension : string) => {\n    const extensionExports = ex.bot.getExports(extension);\n    if (extensionExports && extensionExports.groupManagement) {\n\n      const permissions : ExtensionPermission[] = extensionExports.groupManagement;\n      for (const permissionData of permissions) {\n        GM.permissions.add({\n          extension,\n          category: permissionData.display.category,\n          name: permissionData.display.name,\n          id: permissionData.id,\n          command: permissionData.command,\n          callback: permissionData.callback,\n          ignore: permissionData.ignore\n        });\n      }\n\n    }\n  };\n\n  /**\n   * Listener for when an extension is deregistered.\n   * @param extension Name of the extension.\n   */\n  const handleExtensionDeregister = (extension : string) => {\n    const permissions = GM.permissions.getExtensionPermissions(extension);\n    for (const permission of permissions) {\n      permission.delete();\n    }\n  };\n\n  /**\n   * Loads all extensions that were loaded before this extension.\n   */\n  const handleExistingExtensions = () => {\n    const extensions = MessageBot.extensions;\n    for (const extension of extensions) {\n      handleExtensionRegister(extension);\n    }\n  };\n\n  ex.remove = () => {\n    MessageBot.extensionRegistered.unsub(handleExtensionRegister);\n    MessageBot.extensionDeregistered.unsub(handleExtensionDeregister);\n    GM.ui.uninstall();\n  };\n\n  MessageBot.extensionRegistered.sub(handleExtensionRegister);\n  MessageBot.extensionDeregistered.sub(handleExtensionDeregister);\n  handleExistingExtensions();\n});"],"names":["SAVE_KEY","MessageBot"],"mappings":"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"}